"use strict";document.addEventListener("DOMContentLoaded",function(e){{let t;var a=$(".transaction-date"),o=$(".due-date"),n=$(".select2"),n,o;n.length&&n.each(function(){var e=$(this);e.wrap('<div class="position-relative"></div>').select2({placeholder:"Select Status",dropdownParent:e.parent()}),e.on("change",function(){t.revalidateField("Status")})}),a&&a.flatpickr({monthSelectorType:"static",dateFormat:"M j, Y",onClose:function(){t.revalidateField("TransactionDate")}}),o&&o.flatpickr({monthSelectorType:"static",dateFormat:"M j, Y",onClose:function(){t.revalidateField("DueDate")}}),(n=document.getElementById("addTransactionForm"))&&(t=FormValidation.formValidation(n,{fields:{Customer:{validators:{notEmpty:{message:"Please enter Customer Name"}}},Status:{validators:{notEmpty:{message:"Please select a Transaction Status"}}},Total:{validators:{notEmpty:{message:"Please fill the amount"},regexp:{regexp:/^\d+(\.\d{1,2})?$/,message:"Only 2 digits are allowed after the decimal point"}}},DueDate:{validators:{notEmpty:{message:"Please select a Due Date"},callback:{message:"Due Date should be equal to or later than Transaction Date",callback:function(e){var e=e.value,t=a.val();return new Date(e)>=new Date(t)}}}},TransactionDate:{validators:{notEmpty:{message:"Please select a Transaction Date"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:".mb-3"}),submitButton:new FormValidation.plugins.SubmitButton,defaultSubmit:new FormValidation.plugins.DefaultSubmit,autoFocus:new FormValidation.plugins.AutoFocus}})),(o=document.getElementById("UpdateTransactionForm"))&&(t=FormValidation.formValidation(o,{fields:{Customer:{validators:{notEmpty:{message:"Please enter Customer Name"}}},Status:{validators:{notEmpty:{message:"Please select a Transaction Status"}}},Total:{validators:{notEmpty:{message:"Please fill the amount"},regexp:{regexp:/^\d+(\.\d{1,2})?$/,message:"Only 2 digits are allowed after the decimal point"}}},DueDate:{validators:{notEmpty:{message:"Please select a Due Date"},callback:{message:"Due Date should be equal to or later than Transaction Date",callback:function(e){var e=e.value,t=a.val();return new Date(e)>=new Date(t)}}}},TransactionDate:{validators:{notEmpty:{message:"Please select a Transaction Date"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:".mb-3"}),submitButton:new FormValidation.plugins.SubmitButton,defaultSubmit:new FormValidation.plugins.DefaultSubmit,autoFocus:new FormValidation.plugins.AutoFocus}}))}});